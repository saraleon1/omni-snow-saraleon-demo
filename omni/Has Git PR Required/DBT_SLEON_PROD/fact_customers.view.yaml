# Reference this view as dbt_sleon_prod__fact_customers
schema: DBT_SLEON_PROD
table_name: FACT_CUSTOMERS

dimensions:
  customer_id:
    sql: '"CUSTOMER_ID"'
    format: ID

  customer_name:
    sql: '"CUSTOMER_NAME"'

  count_lifetime_orders:
    sql: '"COUNT_LIFETIME_ORDERS"'

  first_ordered_at:
    sql: '"FIRST_ORDERED_AT"'

  last_ordered_at:
    sql: '"LAST_ORDERED_AT"'

  lifetime_spend_pretax:
    sql: '"LIFETIME_SPEND_PRETAX"'

  lifetime_tax_paid:
    sql: '"LIFETIME_TAX_PAID"'

  lifetime_spend:
    sql: '"LIFETIME_SPEND"'

  customer_type:
    sql: '"CUSTOMER_TYPE"'

measures:
  count:
    aggregate_type: count

#The info below was pulled from your dbt repository and is read-only.
dbt:
  name: fact_customers
  target_schema: dbt_sleon_prod
  config:
    materialized: table
  code: |-
    with

    customers as (

        select * from {{ ref('stg_customers') }}

    ),

    orders as (

        select * from {{ ref('orders') }}

    ),

    customer_orders_summary as (

        select
            orders.customer_id,

            count(distinct orders.order_id) as count_lifetime_orders,
            count(distinct orders.order_id) > 1 as is_repeat_buyer,
            min(orders.ordered_at) as first_ordered_at,
            max(orders.ordered_at) as last_ordered_at,
            sum(orders.subtotal) as lifetime_spend_pretax,
            sum(orders.tax_paid) as lifetime_tax_paid,
            sum(orders.order_total) as lifetime_spend

        from orders

        group by 1

    ),

    joined as (

        select
            customers.*,

            customer_orders_summary.count_lifetime_orders,
            customer_orders_summary.first_ordered_at,
            customer_orders_summary.last_ordered_at,
            customer_orders_summary.lifetime_spend_pretax,
            customer_orders_summary.lifetime_tax_paid,
            customer_orders_summary.lifetime_spend,

            case
                when customer_orders_summary.is_repeat_buyer then 'returning'
                else 'new'
            end as customer_type

        from customers

        left join customer_orders_summary
            on customers.customer_id = customer_orders_summary.customer_id

    )

    select * from joined
